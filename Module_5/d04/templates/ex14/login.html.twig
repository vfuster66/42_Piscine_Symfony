{# templates/ex14/login.html.twig #}
<!DOCTYPE html>
<html lang="en">
<head>
   <meta charset="UTF-8">
   <meta name="viewport" content="width=device-width, initial-scale=1.0">
   <title>Login Vulnérable</title>
   <style>
       :root {
           --primary-color: #4CAF50;
           --primary-hover: #45a049;
           --danger-color: #dc3545;
           --success-bg: #d4edda;
           --success-text: #155724;
           --error-bg: #f8d7da; 
           --error-text: #721c24;
           --border-radius: 8px;
           --box-shadow: 0 2px 4px rgba(0,0,0,0.1);
           --transition: all 0.3s ease;
       }

       body {
           font-family: 'Segoe UI', Arial, sans-serif;
           background: linear-gradient(135deg, #f5f7fa 0%, #e4e8eb 100%);
           min-height: 100vh;
           margin: 0;
           padding: 20px;
           display: flex;
           align-items: center;
           justify-content: center;
       }

       .form-container {
           width: 100%;
           max-width: 400px;
           background: white;
           padding: 2rem;
           border-radius: var(--border-radius);
           box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
       }

       h1 {
           text-align: center;
           color: var(--primary-color);
           margin-bottom: 1.5rem;
           font-size: 2rem;
           position: relative;
           padding-bottom: 10px;
       }

       h1::after {
           content: '';
           position: absolute;
           bottom: 0;
           left: 50%;
           transform: translateX(-50%);
           width: 50px;
           height: 3px;
           background: var(--primary-color);
           border-radius: 2px;
       }

       .message {
           padding: 1rem;
           border-radius: var(--border-radius);
           margin-bottom: 1.5rem;
           font-weight: 500;
           text-align: center;
           animation: slideIn 0.3s ease;
       }

       @keyframes slideIn {
           from { transform: translateY(-20px); opacity: 0; }
           to { transform: translateY(0); opacity: 1; }
       }

       .success {
           background-color: var(--success-bg);
           color: var(--success-text);
           border: 1px solid #c3e6cb;
       }

       .error {
           background-color: var(--error-bg);
           color: var(--error-text);
           border: 1px solid #f5c6cb;
       }

       .form-group {
           margin-bottom: 1.5rem;
       }

       label {
           display: block;
           margin-bottom: 0.5rem;
           color: #2c3e50;
           font-weight: 500;
       }

       input {
           width: 100%;
           padding: 0.75rem;
           border: 2px solid #e0e0e0;
           border-radius: var(--border-radius);
           font-size: 1rem;
           transition: var(--transition);
           box-sizing: border-box;
       }

       input:focus {
           outline: none;
           border-color: var(--primary-color);
           box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.1);
       }

       button {
           width: 100%;
           padding: 0.75rem;
           background-color: var(--primary-color);
           color: white;
           border: none;
           border-radius: var(--border-radius);
           font-size: 1rem;
           font-weight: 600;
           cursor: pointer;
           transition: var(--transition);
           margin-bottom: 1rem;
       }

       button:hover {
           background-color: var(--primary-hover);
           transform: translateY(-2px);
           box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
       }

       button:active {
           transform: translateY(0);
       }

       .links {
           text-align: center;
           margin-top: 1.5rem;
           padding-top: 1.5rem;
           border-top: 1px solid #eee;
       }

       .links a {
           display: inline-block;
           color: var(--primary-color);
           text-decoration: none;
           margin: 0 10px;
           font-weight: 500;
           transition: var(--transition);
       }

       .links a:hover {
           color: var(--primary-hover);
           transform: translateY(-2px);
       }

       @media (max-width: 480px) {
           body {
               padding: 10px;
           }

           .form-container {
               padding: 1.5rem;
           }

           h1 {
               font-size: 1.5rem;
           }

           input, button {
               padding: 0.6rem;
           }
       }

       .sql-debug {
            margin: 1rem 0;
            padding: 1rem;
            background: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: var(--border-radius);
            font-family: monospace;
            font-size: 0.9rem;
            overflow-x: auto;
        }

        .sql-debug pre {
            margin: 0;
            white-space: pre-wrap;
            word-wrap: break-word;
        }
   </style>
</head>
<body>
   <div class="form-container">
       <h1>Login</h1>
       
       {% if error %}
           <div class="message error">{{ error }}</div>
       {% endif %}
       {% if success %}
           <div class="message success">{{ success }}</div>
       {% endif %}

       {# Ajouter juste après les messages d'erreur/succès #}
        {% if debugSQL %}
            <div class="sql-debug">
                <pre>{{ debugSQL }}</pre>
            </div>
        {% endif %}

       <form id="loginForm" method="post">
           <div class="form-group">
               <label for="username">Username:</label>
               <input type="text" id="username" name="username" required>
           </div>
           <div class="form-group">
               <label for="password">Password:</label>
               <input type="password" id="password" name="password" required>
           </div>
           <button type="submit">Login</button>
       </form>

       <div class="links">
           <a href="{{ path('ex14_view') }}">Voir les utilisateurs</a>
           <a href="{{ path('home') }}">Retour à l'accueil</a>
       </div>
   </div>

   <script>
       document.getElementById('loginForm').addEventListener('submit', function(e) {
            const username = document.getElementById('username').value;
            if (username.includes('--') || username.includes(';')) {
                // Au lieu de bloquer, on prévient juste l'utilisateur
                console.log('Tentative d\'injection SQL détectée!');
                // Ne pas faire e.preventDefault() pour permettre le test
            }
        });
   </script>
</body>
</html>